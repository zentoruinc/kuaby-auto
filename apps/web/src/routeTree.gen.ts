/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as IntegrationsRouteImport } from './routes/integrations'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AiRouteImport } from './routes/ai'
import { Route as AdCopyRouteImport } from './routes/ad-copy'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdCopyPromptsRouteImport } from './routes/ad-copy/prompts'
import { Route as AdCopyProjectIdRouteImport } from './routes/ad-copy/$projectId'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const IntegrationsRoute = IntegrationsRouteImport.update({
  id: '/integrations',
  path: '/integrations',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AiRoute = AiRouteImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => rootRouteImport,
} as any)
const AdCopyRoute = AdCopyRouteImport.update({
  id: '/ad-copy',
  path: '/ad-copy',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdCopyPromptsRoute = AdCopyPromptsRouteImport.update({
  id: '/prompts',
  path: '/prompts',
  getParentRoute: () => AdCopyRoute,
} as any)
const AdCopyProjectIdRoute = AdCopyProjectIdRouteImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => AdCopyRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ad-copy': typeof AdCopyRouteWithChildren
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/integrations': typeof IntegrationsRoute
  '/todos': typeof TodosRoute
  '/ad-copy/$projectId': typeof AdCopyProjectIdRoute
  '/ad-copy/prompts': typeof AdCopyPromptsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ad-copy': typeof AdCopyRouteWithChildren
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/integrations': typeof IntegrationsRoute
  '/todos': typeof TodosRoute
  '/ad-copy/$projectId': typeof AdCopyProjectIdRoute
  '/ad-copy/prompts': typeof AdCopyPromptsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/ad-copy': typeof AdCopyRouteWithChildren
  '/ai': typeof AiRoute
  '/dashboard': typeof DashboardRoute
  '/integrations': typeof IntegrationsRoute
  '/todos': typeof TodosRoute
  '/ad-copy/$projectId': typeof AdCopyProjectIdRoute
  '/ad-copy/prompts': typeof AdCopyPromptsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ad-copy'
    | '/ai'
    | '/dashboard'
    | '/integrations'
    | '/todos'
    | '/ad-copy/$projectId'
    | '/ad-copy/prompts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ad-copy'
    | '/ai'
    | '/dashboard'
    | '/integrations'
    | '/todos'
    | '/ad-copy/$projectId'
    | '/ad-copy/prompts'
  id:
    | '__root__'
    | '/'
    | '/ad-copy'
    | '/ai'
    | '/dashboard'
    | '/integrations'
    | '/todos'
    | '/ad-copy/$projectId'
    | '/ad-copy/prompts'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdCopyRoute: typeof AdCopyRouteWithChildren
  AiRoute: typeof AiRoute
  DashboardRoute: typeof DashboardRoute
  IntegrationsRoute: typeof IntegrationsRoute
  TodosRoute: typeof TodosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/integrations': {
      id: '/integrations'
      path: '/integrations'
      fullPath: '/integrations'
      preLoaderRoute: typeof IntegrationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai': {
      id: '/ai'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof AiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ad-copy': {
      id: '/ad-copy'
      path: '/ad-copy'
      fullPath: '/ad-copy'
      preLoaderRoute: typeof AdCopyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ad-copy/prompts': {
      id: '/ad-copy/prompts'
      path: '/prompts'
      fullPath: '/ad-copy/prompts'
      preLoaderRoute: typeof AdCopyPromptsRouteImport
      parentRoute: typeof AdCopyRoute
    }
    '/ad-copy/$projectId': {
      id: '/ad-copy/$projectId'
      path: '/$projectId'
      fullPath: '/ad-copy/$projectId'
      preLoaderRoute: typeof AdCopyProjectIdRouteImport
      parentRoute: typeof AdCopyRoute
    }
  }
}

interface AdCopyRouteChildren {
  AdCopyProjectIdRoute: typeof AdCopyProjectIdRoute
  AdCopyPromptsRoute: typeof AdCopyPromptsRoute
}

const AdCopyRouteChildren: AdCopyRouteChildren = {
  AdCopyProjectIdRoute: AdCopyProjectIdRoute,
  AdCopyPromptsRoute: AdCopyPromptsRoute,
}

const AdCopyRouteWithChildren =
  AdCopyRoute._addFileChildren(AdCopyRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdCopyRoute: AdCopyRouteWithChildren,
  AiRoute: AiRoute,
  DashboardRoute: DashboardRoute,
  IntegrationsRoute: IntegrationsRoute,
  TodosRoute: TodosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
